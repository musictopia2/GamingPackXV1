@inherits BasicGameView<MonasteryCardGameMainViewModel>
@if (_vmData == null || DataContext == null || _gameContainer == null)
{
    return;
}
<HorizontalDiv Margins="5px">
    <DeckOfCardsHandBlazor R="MonasteryCardInfo" Hand="_vmData.PlayerHand1" />
</HorizontalDiv>
<HorizontalDiv Margins="5px">
    <DeckOfCardsDrawPileBlazor R="MonasteryCardInfo" DeckPile="_vmData.Deck1" />
</HorizontalDiv>
<HorizontalDiv Margins="5px">
    <DeckOfCardsSingleMiscPileBlazor R="MonasteryCardInfo" SinglePile="_vmData.Pile1" />
</HorizontalDiv>
<HorizontalDiv Margins="5px">
    <LabelGridComponent DataContext="DataContext" Labels="_labels" />
</HorizontalDiv>
<HorizontalDiv Margins="5px">

</HorizontalDiv>



<div>
    <HorizontalDiv Margins="5px">
        <DeckOfCardsTempSetsBlazor RU="MonasteryCardInfo"
                                   TargetContainerSize="45vh"
                                   TempPiles="_vmData.TempSets" />
    </HorizontalDiv>

    <HorizontalDiv Margins="5px">
        <DeckOfCardsMainRummySetsBlazor RU="MonasteryCardInfo"
                                        SE="RummySet"
                                        T="SavedSet"
                                        ContainerHeight="45vh"
                                        DataContext="_vmData.MainSets" />
    </HorizontalDiv>
</div>
<div>

    <HorizontalDiv Margins="5px">
        <ScoreBoardBlazor P="MonasteryCardGamePlayerItem"
                          Columns="_scores"
                          UseAbbreviationForTrueFalse="true"
                          Players="_gameContainer.SaveRoot.PlayerList" />
    </HorizontalDiv>
    <HorizontalDiv Margins="5px">
        <MissionUI MissionColumnWidth="20vw" Missions="_vmData.CompleteMissions" />
    </HorizontalDiv>
</div>
@* can adjust as needed.  what is shown is most common for regular card games. *@
@if (TestData!.SaveOption == EnumTestSaveCategory.RestoreOnly)
{
    <ParentControl VM="RestoreViewModel">
        <RestoreView />
    </ParentControl>
}