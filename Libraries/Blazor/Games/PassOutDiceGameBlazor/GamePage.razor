@* you are forced to manually place it each time now unfortunately. *@
@if (GameData == null || TestData == null || BasicData == null)
{
    if (GameData == null)
    {
        <div>No Game Data</div>
    }
    if (TestData == null)
    {
        <div>No Test Data</div>
    }
    if (BasicData == null)
    {
        <div>No Basic Data</div>
    }
    return;
}
<ParentControl VM="NewGameViewModel">
    <NewGameView />
</ParentControl>
@if (GameData.GameType == EnumGameType.Rounds)
{
    <ParentControl VM="NewRoundViewModel">
        <NewRoundView />
    </ParentControl>
}
<ParentControl VM="PassOutDiceGameMainViewModel">
    <PassOutDiceGameMainView />
</ParentControl>
<ParentControl VM="MultiplayerOpeningViewModel<PassOutDiceGamePlayerItem>">
    <MultiplayerOpeningView P="PassOutDiceGamePlayerItem" />
</ParentControl>
<ParentControl VM="BeginningChooseColorViewModel<EnumColorChoice, PassOutDiceGamePlayerItem>">
    <BeginningChooseColorView E="EnumColorChoice" Context="Piece" P="PassOutDiceGamePlayerItem">
        @* if there is another piece, replace with proper piece. *@
        <CheckerPiece HasImage="true" PieceCategory="EnumCheckerPieceCategory.OnlyPiece" MainColor="@GetColor(Piece.EnumValue)" />
    </BeginningChooseColorView>
</ParentControl>
@if (TestData.ShowNickNameOnShell)
{
    @BasicData.NickName
}